// <auto-generated />
using Demo_Caisse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo_Caisse.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230510121937_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo_Caisse.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Produits ménagers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Accessoires g@m3r"
                        });
                });

            modelBuilder.Entity("Demo_Caisse.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Produits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Le meilleur de tous les produits ménagers",
                            Name = "Toudoux",
                            Price = 6.49m,
                            ProductUrl = "test",
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Le calcaire c'est la mort",
                            Name = "Calgon",
                            Price = 12.49m,
                            ProductUrl = "test",
                            Quantity = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Une souris",
                            Name = "Razer",
                            Price = 62.22m,
                            ProductUrl = "test",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Un clavier",
                            Name = "Logitech",
                            Price = 148.0m,
                            ProductUrl = "test",
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("Demo_Caisse.Models.Product", b =>
                {
                    b.HasOne("Demo_Caisse.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Demo_Caisse.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
